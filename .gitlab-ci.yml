image: openjdk:8

# Setup
stages:
  - build
  - test
  - publish
  - deploy
  - integration
  - clean

# Jobs
.template_prepare_kube: &prepare_kube
  tags: [docker]
  image: artifacts.int.corefiling.com:5000/pdds/kube-deploy:0.8.1
  dependencies:
    - build version
    - publish
  variables:
    TILLER_NAMESPACE: $CI_ENVIRONMENT_SLUG
    HELM_CHART: integration-tests
  before_script:
    - export IMAGE_TAG=`cat build.version`
    - echo "IMAGE_TAG=$IMAGE_TAG"
    - echo "TILLER_NAMESPACE=$TILLER_NAMESPACE"
    - /kube/init $KUBE_AUTH_TOKEN $TILLER_NAMESPACE

.template-gradle: &gradle
  tags:
    - docker
  variables: &gradle_variables
    JAVA_OPTS: -DbuildInfo.build.number=pipeline-$CI_PIPELINE_ID -Dorg.gradle.daemon=false
    GRADLE_TASK: $CI_JOB_NAME
    GRADLE_USER_HOME: /opt/gradle/caches
  cache: &cache
    key: '$CI_BUILD_REF_NAME'
    untracked: true
    policy: pull
  script: '"$CI_PROJECT_DIR/gradlew" --stacktrace "$CI_JOB_NAME"'

assemble:
  <<: *gradle
  stage: build
  cache:
    <<: *cache
    policy: push

build version:
  stage: build
  tags:
    - docker
  image: artifacts.int.corefiling.com:5000/beacon/beacon/ci-build-version:local
  artifacts:
    expire_in: 1 week
    paths:
      - build.version
  script:
    - ci-build-version -b `cat gradle.properties | grep "^version = " | sed 's/version = //'` > build.version

test: *gradle

publish:
  <<: *gradle
  tags:
    - docker
    - docker-privileged
  stage: publish
  environment:
    name: artifactory
    url: https://artifacts.int.corefiling.com/webapp/#/builds/$CI_PROJECT_NAMESPACE%252F$CI_PROJECT_NAME
  services:
    - docker:dind
  variables:
    <<: *gradle_variables
    DOCKER_HOST: tcp://docker:2375

deploy:service:
  <<: *prepare_kube
  stage: deploy
  environment: &environment
    name: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG
  artifacts:
    expire_in: 1 week
    paths:
      - service.url
  script:
    - BASE_DOMAIN="$TILLER_NAMESPACE.kube.int.corefiling.com"
    - SERVICE_URL="https://$BASE_DOMAIN"
    - echo "$SERVICE_URL" > service.url
    - echo "Deploying to $SERVICE_URL"
    - cd charts
    - helm dependency update $HELM_CHART
    - helm upgrade --install
      --set ingress.host=$BASE_DOMAIN
      --set digit-frequency-analysis-service.imageTag=$IMAGE_TAG
      --namespace=$TILLER_NAMESPACE
      $HELM_CHART
      $HELM_CHART
      --debug
    - /kube/checkRunning

testIntegration:
  <<: *gradle
  stage: integration
  dependencies:
    - deploy:service

clean:undeploy:
  <<: *prepare_kube
  stage: clean
  when: always
  environment:
    <<: *environment
    action: stop
  script:
    - kube-auth namespace delete $TILLER_NAMESPACE
